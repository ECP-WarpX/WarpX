name: üçè macOS

on:
  push:
    branches:
      - "development"
  pull_request:
    paths-ignore:
      - "Docs/**"

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-macos
  cancel-in-progress: true

jobs:
  build_appleclang:
    name: AppleClang
    runs-on: macos-latest
    if: github.event.pull_request.draft == false
    env:
      CXXFLAGS: "-Werror -Wno-error=pass-failed"
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: TRUE
      # For macOS, Ninja is slower than the default:
      #CMAKE_GENERATOR: Ninja
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      name: Install Python
      with:
        python-version: '3.x'
    - name: install brew dependencies
      run: |
        set +e
        brew unlink gcc
        brew update
        brew upgrade || true
        brew install ccache
        brew install fftw
        brew install libomp
        brew link --overwrite --force libomp
        brew install ninja
        brew install open-mpi
        brew install pkg-config
        set -e
        brew tap openpmd/openpmd
        brew install openpmd-api
    - name: install pip dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade build packaging setuptools wheel
        python3 -m pip install --upgrade mpi4py
        python3 -m pip install --upgrade -r Regression/requirements.txt
    - name: CCache Cache
      uses: actions/cache@v4
      with:
        path: ~/Library/Caches/ccache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: build WarpX
      run: |
        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=100M
        export CCACHE_SLOPPINESS=time_macros
        ccache -z

        cmake -S . -B build_dp         \
          -DCMAKE_VERBOSE_MAKEFILE=ON  \
          -DWarpX_EB=OFF               \
          -DWarpX_OPENPMD=ON           \
          -DWarpX_openpmd_internal=OFF
        cmake --build build_dp -j 3

        cmake -S . -B build_sp         \
          -DCMAKE_VERBOSE_MAKEFILE=ON  \
          -DWarpX_EB=OFF               \
          -DWarpX_PYTHON=ON            \
          -DWarpX_OPENPMD=ON           \
          -DWarpX_openpmd_internal=OFF \
          -DWarpX_PRECISION=SINGLE
        cmake --build build_sp -j 3
        cmake --build build_sp --target pip_install

        du -hs ~/Library/Caches/ccache
        ccache -s

    - name: run pywarpx
      run: |
        export OMP_NUM_THREADS=1

        mpirun -n 2 Examples/Physics_applications/laser_acceleration/inputs_test_3d_laser_acceleration_picmi.py
