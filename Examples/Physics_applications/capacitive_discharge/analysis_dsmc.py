#!/usr/bin/env python3

# 2023 TAE Technologies

import os
import sys

import numpy as np

sys.path.append('../../../../warpx/Regression/Checksum/')

import checksumAPI

# this will be the name of the plot file
fn = sys.argv[1]
test_name = os.path.split(os.getcwd())[1]

my_check = checksumAPI.evaluate_checksum(test_name, fn, do_particles=True)

ref_density = np.array([
    1.27943881e+14, 2.23583097e+14, 2.55396716e+14, 2.55673406e+14,
    2.55827566e+14, 2.55803446e+14, 2.55798707e+14, 2.55748961e+14,
    2.55906413e+14, 2.56063991e+14, 2.55937018e+14, 2.55841390e+14,
    2.55917724e+14, 2.55988641e+14, 2.56052050e+14, 2.56285151e+14,
    2.56647960e+14, 2.56756264e+14, 2.56430158e+14, 2.56117493e+14,
    2.56065302e+14, 2.56265220e+14, 2.56328575e+14, 2.56031495e+14,
    2.56123757e+14, 2.56431173e+14, 2.56385320e+14, 2.56391170e+14,
    2.56561177e+14, 2.56513926e+14, 2.56332201e+14, 2.56252442e+14,
    2.56238982e+14, 2.56216498e+14, 2.56461281e+14, 2.56863199e+14,
    2.56908100e+14, 2.56926112e+14, 2.57001641e+14, 2.56735963e+14,
    2.56315358e+14, 2.56137028e+14, 2.56101418e+14, 2.56276827e+14,
    2.56425668e+14, 2.56181798e+14, 2.56044925e+14, 2.56330387e+14,
    2.56623150e+14, 2.56445316e+14, 2.56292750e+14, 2.56440918e+14,
    2.56433406e+14, 2.56186982e+14, 2.56236390e+14, 2.56469557e+14,
    2.56349704e+14, 2.56487457e+14, 2.56771823e+14, 2.56614683e+14,
    2.56552210e+14, 2.56850291e+14, 2.56783396e+14, 2.56483187e+14,
    2.56510868e+14, 2.56490408e+14, 2.56656042e+14, 2.56820924e+14,
    2.56640314e+14, 2.56465063e+14, 2.56510264e+14, 2.56917331e+14,
    2.57228490e+14, 2.56960593e+14, 2.56587911e+14, 2.56672682e+14,
    2.56774414e+14, 2.56548335e+14, 2.56225540e+14, 2.56079693e+14,
    2.56062796e+14, 2.56054612e+14, 2.56028683e+14, 2.56068820e+14,
    2.56380975e+14, 2.56654914e+14, 2.56776792e+14, 2.56983661e+14,
    2.56989477e+14, 2.56646250e+14, 2.56589639e+14, 2.56946205e+14,
    2.57091201e+14, 2.56913590e+14, 2.56513535e+14, 2.56122597e+14,
    2.56176340e+14, 2.56808001e+14, 2.57239393e+14, 2.56845066e+14,
    2.56662482e+14, 2.56862583e+14, 2.56518922e+14, 2.56155531e+14,
    2.56362794e+14, 2.57203564e+14, 2.57737938e+14, 2.57252026e+14,
    2.56859277e+14, 2.56658995e+14, 2.56357364e+14, 2.56393454e+14,
    2.56714308e+14, 2.57042200e+14, 2.57551087e+14, 2.57502490e+14,
    2.56641118e+14, 2.56401115e+14, 2.56644629e+14, 2.56673096e+14,
    2.56534659e+14, 2.56357745e+14, 2.56455309e+14, 2.56586850e+14,
    2.56442415e+14, 2.56335971e+14, 2.56411429e+14, 2.24109018e+14,
    1.27678869e+14
])

density_data = np.load( 'ion_density_case_1.npy' )
print(repr(density_data))
assert np.allclose(density_data, ref_density)
