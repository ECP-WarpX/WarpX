#!/usr/bin/env python3

# 2023 TAE Technologies

import os
import sys

import numpy as np

sys.path.append("../../../../warpx/Regression/Checksum/")

import checksumAPI

# this will be the name of the plot file
fn = sys.argv[1]
test_name = os.path.split(os.getcwd())[1]

my_check = checksumAPI.evaluate_checksum(test_name, fn, do_particles=True)

ref_density = np.array(
    [
        1.27943881e14,
        2.23583097e14,
        2.55396716e14,
        2.55673406e14,
        2.55827566e14,
        2.55803446e14,
        2.55798707e14,
        2.55748961e14,
        2.55906413e14,
        2.56063991e14,
        2.55937018e14,
        2.55841390e14,
        2.55917724e14,
        2.55988641e14,
        2.56052050e14,
        2.56285151e14,
        2.56647960e14,
        2.56756264e14,
        2.56430158e14,
        2.56117493e14,
        2.56065302e14,
        2.56265220e14,
        2.56328575e14,
        2.56031495e14,
        2.56123757e14,
        2.56431173e14,
        2.56385320e14,
        2.56391170e14,
        2.56561177e14,
        2.56513926e14,
        2.56332201e14,
        2.56252442e14,
        2.56238982e14,
        2.56216498e14,
        2.56461281e14,
        2.56863199e14,
        2.56908100e14,
        2.56926112e14,
        2.57001641e14,
        2.56735963e14,
        2.56315358e14,
        2.56137028e14,
        2.56101418e14,
        2.56276827e14,
        2.56425668e14,
        2.56181798e14,
        2.56044925e14,
        2.56330387e14,
        2.56623150e14,
        2.56445316e14,
        2.56292750e14,
        2.56440918e14,
        2.56433406e14,
        2.56186982e14,
        2.56236390e14,
        2.56469557e14,
        2.56349704e14,
        2.56487457e14,
        2.56771823e14,
        2.56614683e14,
        2.56552210e14,
        2.56850291e14,
        2.56783396e14,
        2.56483187e14,
        2.56510868e14,
        2.56490408e14,
        2.56656042e14,
        2.56820924e14,
        2.56640314e14,
        2.56465063e14,
        2.56510264e14,
        2.56917331e14,
        2.57228490e14,
        2.56960593e14,
        2.56587911e14,
        2.56672682e14,
        2.56774414e14,
        2.56548335e14,
        2.56225540e14,
        2.56079693e14,
        2.56062796e14,
        2.56054612e14,
        2.56028683e14,
        2.56068820e14,
        2.56380975e14,
        2.56654914e14,
        2.56776792e14,
        2.56983661e14,
        2.56989477e14,
        2.56646250e14,
        2.56589639e14,
        2.56946205e14,
        2.57091201e14,
        2.56913590e14,
        2.56513535e14,
        2.56122597e14,
        2.56176340e14,
        2.56808001e14,
        2.57239393e14,
        2.56845066e14,
        2.56662482e14,
        2.56862583e14,
        2.56518922e14,
        2.56155531e14,
        2.56362794e14,
        2.57203564e14,
        2.57737938e14,
        2.57252026e14,
        2.56859277e14,
        2.56658995e14,
        2.56357364e14,
        2.56393454e14,
        2.56714308e14,
        2.57042200e14,
        2.57551087e14,
        2.57502490e14,
        2.56641118e14,
        2.56401115e14,
        2.56644629e14,
        2.56673096e14,
        2.56534659e14,
        2.56357745e14,
        2.56455309e14,
        2.56586850e14,
        2.56442415e14,
        2.56335971e14,
        2.56411429e14,
        2.24109018e14,
        1.27678869e14,
    ]
)

density_data = np.load("ion_density_case_1.npy")
print(repr(density_data))
assert np.allclose(density_data, ref_density)
