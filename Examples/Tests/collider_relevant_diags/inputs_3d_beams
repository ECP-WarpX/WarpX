#################################
########## MY CONSTANTS #########
#################################
my_constants.mc2 = m_e*clight*clight
my_constants.micro = 1.e-6
my_constants.MeV = q_e*1.e6
# BEAMS
my_constants.beam_npart = 1.e10
my_constants.gammab = 1000.
my_constants.chargeb = q_e*beam_npart
my_constants.sigmaz = 1.e-9
my_constants.sigmax = 1.e-9
my_constants.sigmay = 1.e-9
my_constants.mux = 0.0
my_constants.muy = 0.0
my_constants.n0 = chargeb / (q_e * sigmax * sigmay * sigmaz * (2.*pi)**(3./2.))
# BOX
my_constants.Lz = 14*sigmaz
my_constants.Lx = 7*sigmax
my_constants.Ly = 7*sigmay
my_constants.nz = 128
my_constants.nx = 64
my_constants.ny = 64
my_constants.dz = Lz/nz
my_constants.dx = Lx/nx
my_constants.dy = Ly/ny
# TIME
my_constants.T = 0.7*Lz/clight
my_constants.cfl = 0.99
my_constants.dt = cfl/clight/sqrt((1./dx)^2+(1./dy)^2+(1./dz)^2)
my_constants.nt = floor(T/dt)

# DIAGS
my_constants.hundo = floor(nt/100.)
my_constants.every_red = 1.
my_constants.every_full = hundo
#################################
####### GENERAL PARAMETERS ######
#################################
stop_time = T
amr.n_cell = nx ny nz
amr.max_grid_size = 64
amr.blocking_factor = 2
amr.max_level = 0
geometry.dims = 3
geometry.prob_lo = -0.5*Lx -0.5*Ly -0.5*Lz
geometry.prob_hi =  0.5*Lx  0.5*Ly  0.5*Lz
warpx.use_filter = 0
#################################
######## BOUNDARY CONDITION #####
#################################
boundary.field_lo = pec pec pec # periodic periodic periodic
boundary.field_hi = pec pec pec #periodic periodic periodic
boundary.particle_lo = absorbing absorbing absorbing #periodic periodic periodic
boundary.particle_hi = absorbing absorbing absorbing #periodic periodic periodic
#################################
############ NUMERICS ###########
#################################
algo.maxwell_solver = ckc
warpx.cfl = cfl
algo.particle_shape = 1
algo.load_balance_intervals=100
algo.particle_pusher = vay
#################################
########### PARTICLES ###########
#################################
particles.species_names = beam_p beam_e pho
particles.photon_species = pho

my_constants.muz = -0.5*Lz+3.1*sigmaz

beam_e.species_type = electron
beam_e.injection_style = NRandomPerCell
beam_e.num_particles_per_cell = 5
beam_e.profile = parse_density_function
beam_e.density_function(x,y,z) = "n0*exp(-(x-mux)**2/(2*sigmax**2))*exp(-(y-muy)**2/(2*sigmay**2))*exp(-(z-muz)**2/(2*sigmaz**2))"
beam_e.density_min = n0 / 1e3
beam_e.momentum_distribution_type = constant
beam_e.ux = 0.
beam_e.uy = 0.
beam_e.uz = gammab
beam_e.initialize_self_fields = 1
beam_e.self_fields_required_precision = 5e-10
beam_e.self_fields_max_iters = 200
beam_e.do_qed_quantum_sync = 1
beam_e.qed_quantum_sync_phot_product_species = pho
beam_e.do_classical_radiation_reaction = 0

beam_p.species_type = positron
beam_p.injection_style = NRandomPerCell
beam_p.num_particles_per_cell = 5
beam_p.profile = parse_density_function
beam_p.density_function(x,y,z) = "n0*exp(-(x-mux)**2/(2*sigmax**2))*exp(-(y-muy)**2/(2*sigmay**2))*exp(-(z+muz)**2/(2*sigmaz**2))"
beam_p.density_min = n0 / 1e3
beam_p.momentum_distribution_type = constant
beam_p.ux = 0.
beam_p.uy = 0.
beam_p.uz = -gammab
beam_p.initialize_self_fields = 1
beam_p.self_fields_required_precision = 5e-10
beam_p.self_fields_max_iters = 200
beam_p.do_qed_quantum_sync = 1
beam_p.qed_quantum_sync_phot_product_species = pho
beam_p.do_classical_radiation_reaction = 0

pho.species_type = photon
pho.injection_style = none

#################################
############# QED ###############
#################################
qed_qs.photon_creation_energy_threshold = 0.

qed_qs.lookup_table_mode = builtin
qed_qs.chi_min = 1.e-3
qed_bw.lookup_table_mode = builtin
qed_bw.chi_min = 1.e-2

warpx.do_qed_schwinger = 0

#################################
######### DIAGNOSTICS ###########
#################################
# FULL
diagnostics.diags_names = diag1
diag1.intervals = 1
diag1.diag_type = Full
diag1.write_species = 0
diag1.fields_to_plot = Ex Ey Ez Bx By Bz rho_beam_e rho_beam_p rho
diag1.species = pho beam_e beam_p
diag1.format = openpmd
diag1.openpmd_backend = bp
diag1.dump_last_timestep = 1
#diag1.particle_fields_to_plot= vx vy vz g
#diag1.particle_fields_species = beam_p
#diag1.particle_fields.vx(x,y,z,ux,uy,uz)=ux/sqrt(ux*ux+uy*uy+uz*uz)
#diag1.particle_fields.vy(x,y,z,ux,uy,uz)=uy/sqrt(ux*ux+uy*uy+uz*uz)
#diag1.particle_fields.vz(x,y,z,ux,uy,uz)=uz/sqrt(ux*ux+uy*uy+uz*uz)
#diag1.particle_fields.g(x,y,z,ux,uy,uz)=sqrt(ux*ux+uy*uy+uz*uz)




# REDUCED
warpx.reduced_diags_names = ParticleExtrema_beam_e ParticleExtrema_beam_p ParticleExtrema_pho ParticleEnergy ParticleNumber BeamRelevant_beam_e BeamRelevant_beam_p ColliderRelevant_beam_e_beam_p

ColliderRelevant_beam_e_beam_p.type = ColliderRelevant
ColliderRelevant_beam_e_beam_p.intervals = 1
ColliderRelevant_beam_e_beam_p.species = beam_p beam_e

ParticleExtrema_beam_e.type = ParticleExtrema
ParticleExtrema_beam_e.intervals = 1
ParticleExtrema_beam_e.species = beam_e

ParticleExtrema_beam_p.type = ParticleExtrema
ParticleExtrema_beam_p.intervals = 1
ParticleExtrema_beam_p.species = beam_p

ParticleExtrema_pho.type = ParticleExtrema
ParticleExtrema_pho.intervals = 1
ParticleExtrema_pho.species = pho

ParticleEnergy.type = ParticleEnergy
ParticleEnergy.intervals = 1

ParticleNumber.type = ParticleNumber
ParticleNumber.intervals = 1

BeamRelevant_beam_e.type = BeamRelevant
BeamRelevant_beam_e.species = beam_e
BeamRelevant_beam_e.intervals = 1

BeamRelevant_beam_p.type= BeamRelevant
BeamRelevant_beam_p.species = beam_p
BeamRelevant_beam_p.intervals = 1
