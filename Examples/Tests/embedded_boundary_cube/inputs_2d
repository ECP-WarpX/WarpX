stop_time = 1.3342563807926085e-08
amr.n_cell = 32 32
amr.max_grid_size = 128
amr.max_level = 0

geometry.dims = 2
geometry.prob_lo     = -0.8 -0.8
geometry.prob_hi     =  0.8  0.8
warpx.cfl = 1

boundary.field_lo = pec pec
boundary.field_hi = pec pec

my_constants.xmin = -0.5
my_constants.zmin = -0.5
my_constants.xmax = 0.5
my_constants.zmax = 0.5
# Note that for amrex EB implicit function, >0 is covered, =0 is boundary and <0 is regular.
warpx.eb_implicit_function = "max(max(x+xmin,-(x+xmax)), max(z+zmin,-(z+zmax)))"

# To test the initial electrostatic solver, we also add uniform potential
# Since, the potential is uniform here, it should not modify the fields, so this mainly
# tests that calling the electrostatic solver does not raise any error/crash
warpx.eb_potential(x,y,z,t) = "1"

warpx.B_ext_grid_init_style = parse_B_ext_grid_function
warpx.E_ext_grid_init_style = parse_E_ext_grid_function

my_constants.m = 0
my_constants.p = 1
my_constants.Lx = 1
my_constants.Lz = 1

warpx.Bz_external_grid_function(x,z) = 0
warpx.Bx_external_grid_function(x,z) = 0
warpx.By_external_grid_function(x,z) = cos(m * pi / Lx * (x - Lx / 2)) * cos(p * pi / Lz * (z - Lz / 2))*mu0

warpx.Ez_external_grid_function(x,z) = 0
warpx.Ex_external_grid_function(x,z) = 0
warpx.Ey_external_grid_function(x,z) = cos(m * pi / Lx * (x - Lx / 2)) * cos(p * pi / Lz * (z - Lz / 2))*mu0*clight

diagnostics.diags_names = diag1
diag1.intervals = 1
diag1.diag_type = Full
diag1.fields_to_plot = Ex Ey Ez Bx By Bz
