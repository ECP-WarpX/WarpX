my_constants.max_ion_energy = 100.  # eV
my_constants.max_ion_velocity12 = sqrt(2.*max_ion_energy*q_e/m_p)/clight
my_constants.max_ion_velocity34 = sqrt(2.*max_ion_energy*q_e/(4.*m_p))/clight

max_step = 10

amr.n_cell = 8 8 8
amr.max_level = 0
geometry.dims = 3
geometry.prob_lo = -1. -1. -1.
geometry.prob_hi = +1. +1. +1.
boundary.field_lo = periodic periodic periodic
boundary.field_hi = periodic periodic periodic
boundary.particle_lo = periodic periodic periodic
boundary.particle_hi = periodic periodic periodic
algo.particle_shape = 1

particles.species_names = ions1 ions2 ions3 ions4

ions1.species_type = proton
ions1.injection_style = "MultipleParticles"
ions1.multiple_particles_pos_x = 0. 0. 0. 0.
ions1.multiple_particles_pos_y = 0. 0. 0. 0.
ions1.multiple_particles_pos_z = 0. 0. 0. 0.
ions1.multiple_particles_vel_x = max_ion_velocity12 0. 0. max_ion_velocity12/2.
ions1.multiple_particles_vel_y = 0. max_ion_velocity12 0. max_ion_velocity12/2.
ions1.multiple_particles_vel_z = 0. 0. -max_ion_velocity12 -max_ion_velocity12/2.
ions1.multiple_particles_weight = 1. 1. 1. 1.
ions1.do_not_deposit = 1

ions2.species_type = proton
ions2.injection_style = "MultipleParticles"
ions2.multiple_particles_pos_x = -0.1 +0.1 -0.1 +0.1
ions2.multiple_particles_pos_y = -0.1 -0.1 +0.1 +0.1
ions2.multiple_particles_pos_z = 0. 0. 0. 0.
ions2.multiple_particles_vel_x = max_ion_velocity12 max_ion_velocity12 max_ion_velocity12 max_ion_velocity12
ions2.multiple_particles_vel_y = 0. 0. 0. 0.
ions2.multiple_particles_vel_z = 0. 0. 0. 0.
ions2.multiple_particles_weight = 1. 1. 1. 1.
ions2.do_not_deposit = 1

ions3.charge = q_e
ions3.mass = 4*m_p
ions3.injection_style = "MultipleParticles"
ions3.multiple_particles_pos_x = 0. 0. 0. 0.
ions3.multiple_particles_pos_y = 0. 0. 0. 0.
ions3.multiple_particles_pos_z = 0. 0. 0. 0.
ions3.multiple_particles_vel_x = max_ion_velocity34 0. 0. max_ion_velocity34/2.
ions3.multiple_particles_vel_y = 0. max_ion_velocity34 0. max_ion_velocity34/2.
ions3.multiple_particles_vel_z = 0. 0. -max_ion_velocity34 -max_ion_velocity34/2.
ions3.multiple_particles_weight = 1. 1. 1. 1.
ions3.do_not_deposit = 1

ions4.charge = q_e
ions4.mass = 4*m_p
ions4.injection_style = "MultipleParticles"
ions4.multiple_particles_pos_x = -0.1 +0.1 -0.1 +0.1
ions4.multiple_particles_pos_y = -0.1 -0.1 +0.1 +0.1
ions4.multiple_particles_pos_z = 0. 0. 0. 0.
ions4.multiple_particles_vel_x = max_ion_velocity34 max_ion_velocity34 max_ion_velocity34 max_ion_velocity34
ions4.multiple_particles_vel_y = 0. 0. 0. 0.
ions4.multiple_particles_vel_z = 0. 0. 0. 0.
ions4.multiple_particles_weight = 1. 1. 1. 1.
ions4.do_not_deposit = 1

collisions.collision_names = stopping_on_electrons_constant stopping_on_electrons_parsed stopping_on_ions_constant stopping_on_ions_parsed

stopping_on_electrons_constant.type = background_stopping
stopping_on_electrons_constant.species = ions1
stopping_on_electrons_constant.background_type = electrons
stopping_on_electrons_constant.background_mass = m_e
stopping_on_electrons_constant.background_density = 1.e20
stopping_on_electrons_constant.background_temperature = 1.*q_e/kb # Kelvin

stopping_on_electrons_parsed.type = background_stopping
stopping_on_electrons_parsed.species = ions2
stopping_on_electrons_parsed.background_type = electrons
stopping_on_electrons_parsed.background_density(x,y,z,t) = if(x>0,1.e20,1.e21)
stopping_on_electrons_parsed.background_temperature(x,y,z,t) = if(y>0,1.,2.)*q_e/kb

stopping_on_ions_constant.type = background_stopping
stopping_on_ions_constant.species = ions3
stopping_on_ions_constant.background_type = ions
stopping_on_ions_constant.background_mass = m_p
stopping_on_ions_constant.background_charge_state = 1.
stopping_on_ions_constant.background_density = 1.e20
stopping_on_ions_constant.background_temperature = 0.05*q_e/kb # Kelvin

stopping_on_ions_parsed.type = background_stopping
stopping_on_ions_parsed.species = ions4
stopping_on_ions_parsed.background_type = ions
stopping_on_ions_parsed.background_mass = m_p
stopping_on_ions_parsed.background_charge_state = 1.
stopping_on_ions_parsed.background_density(x,y,z,t) = if(x>0,1.e20,1.e21)
stopping_on_ions_parsed.background_temperature(x,y,z,t) = if(y>0,0.05,0.10)*q_e/kb

diagnostics.diags_names = diag1
diag1.diag_type = Full
diag1.format = plotfile
diag1.intervals = 1
